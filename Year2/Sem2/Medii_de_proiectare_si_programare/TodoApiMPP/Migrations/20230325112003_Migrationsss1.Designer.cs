// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApiMPP.Models;

#nullable disable

namespace TodoApiMPP.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230325112003_Migrationsss1")]
    partial class Migrationsss1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductsShop", b =>
                {
                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsShopID")
                        .HasColumnType("int");

                    b.HasKey("ProductsProductId", "ShopsShopID");

                    b.HasIndex("ShopsShopID");

                    b.ToTable("ProductsShop");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Clients", b =>
                {
                    b.Property<int>("CientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CientId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriptionID")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionsSubscriptionID")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CientId");

                    b.HasIndex("CoachId");

                    b.HasIndex("SubscriptionsSubscriptionID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoachId");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("TodoApiMPP.Models.ProductShop", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShopID")
                        .HasColumnType("int");

                    b.Property<int>("ProductShopId")
                        .HasColumnType("int");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ShopID");

                    b.HasIndex("ShopID");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MadeDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Shop", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopID"));

                    b.Property<int>("AverageCustomers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.HasKey("ShopID");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Subscriptions", b =>
                {
                    b.Property<int>("SubscriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionID"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Entries")
                        .HasColumnType("int");

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MadeDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("ProductsShop", b =>
                {
                    b.HasOne("TodoApiMPP.Models.Products", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApiMPP.Models.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoApiMPP.Models.Clients", b =>
                {
                    b.HasOne("TodoApiMPP.Models.Coach", null)
                        .WithMany("Clients")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApiMPP.Models.Subscriptions", null)
                        .WithMany("Clients")
                        .HasForeignKey("SubscriptionsSubscriptionID");
                });

            modelBuilder.Entity("TodoApiMPP.Models.ProductShop", b =>
                {
                    b.HasOne("TodoApiMPP.Models.Products", "Products")
                        .WithMany("ProductShops")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApiMPP.Models.Shop", "Shops")
                        .WithMany("ProductShops")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Coach", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Products", b =>
                {
                    b.Navigation("ProductShops");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Shop", b =>
                {
                    b.Navigation("ProductShops");
                });

            modelBuilder.Entity("TodoApiMPP.Models.Subscriptions", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
